
@article{Perez2014,
author = {Perez, Diego and Samothrakis, Spyridon and Togelius, Julian and Schaul, Tom and Lucas, Simon M and Cou, Adrien and Lee, Jerry and Lim, Chong-u and Thompson, Tommy},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/e77f15c59deafb411bba62df4b06e9b95cfc6252.pdf:pdf},
mendeley-groups = {Estimating difficulty / generation},
title = {{The 2014 General Video Game Playing Competition}},
doi = {10.1109/TCIAIG.2015.2402393},
url = {http://www.diego-perez.net/papers/GVGAI2014Competition.pdf},
year = {2014}
}

@misc{TheGuardian,
author = {Mohammadi, Dari},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/0362991061718e30fd6f64e671f2ac8b5994bdac.html:html},
mendeley-groups = {Estimating difficulty / generation},
title = {The Guardian : Online gamers solving sciences biggest problems},
url = {https://www.theguardian.com/technology/2014/jan/25/online-gamers-solving-sciences-biggest-problems},
year = {2014}
}


@article{Kangas2017,
author = {Kangas, Pasi},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/3f422c20ddbe08f66076c33a17518c9a798aff13.pdf:pdf},
keywords = {adventure games, puzzles, game analysis, close reading, insight thinking, puzzle instinct, intellectual pleasure, Day of the Tentacle},
mendeley-groups = {Other Puzzle needs},
number = {September},
title = {{The pleasures of puzzle-solving in adventure games}},
doi = {10.13140/RG.2.2.31251.99367},
url = {https://pdfs.semanticscholar.org/3f42/2c20ddbe08f66076c33a17518c9a798aff13.pdf},
year = {2017}
}

@article{Csikszentmihalyi,
author = {Csikszentmihalyi, Mihaly},
year = {1990},
month = {01},
pages = {},
title = {Flow: The Psychology of Optimal Experience}
}

@article{RulesOfPlay,
author = {Salen, Katie and Zimmerman, Eric},
file = {:Users/kdkdk/Downloads/1-rules-of-play-game-design-fundamentals.pdf:pdf},
mendeley-groups = {Estimating difficulty / generation},
title = {Rules of Play},
year = {2004},
journal = {MIT Press},
publisher = {MIT Press},
}


@article{Koch,
author = {Koch, Janin and Lucero, Andr{\'{e}}s and Hegemann, Lena and Oulasvirta, Antti},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/7382a4af06050d775469db1490b2dc3c570e10f8.pdf:pdf},
isbn = {9781450359702},
keywords = {acm reference format,creativity,ideation support,interactive machine-learning,mood board design,support tools},
mendeley-groups = {Mixed initiative aspect},
title = {{May AI ? Design Ideation with Cooperative Contextual Bandits}},
year = {2019},
doi = {10.1145/3290605.3300863},
url = {http://users.comnet.aalto.fi/oulasvir/pubs/May-AI-CHI2019.pdf}
}


@article{Horvitz1999,
abstract = {Recent debate has centered on the relative promise of focusing user-interface research on developing new metaphors and tools that enhance users' abilities to directly manipulate objects versus directing effort toward developing interface agents that provide automation. In this paper, we review principles that show promise for allowing engineers to enhance human-computer interaction through an elegant coupling of automated services with direct manipulation. Key ideas will be highlighted in terms of the Lookout system for scheduling and meeting management.},
author = {Horvitz, Eric},
doi = {10.1145/302979.303030},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/58bd5a90ab6b4a950f0421f6337f0ede6be2b81b.pdf:pdf},
isbn = {0201485591},
issn = {10525505},
journal = {Proceedings of the SIGCHI conference on Human factors in computing systems the CHI is the limit - CHI '99},
keywords = {and efficiencies can be,computer,designs for human,gained with automated reasoning,interaction to direct manipulation,when significant power,wish to avoid limiting},
pages = {159--166},
title = {{Principles of mixed-initiative user interfaces}},
url = {http://portal.acm.org/citation.cfm?doid=302979.303030},
year = {1999}
}

@article{Khalifa2015,
abstract = {In this paper, we present a general technique to generate and evaluate puzzle levels made by Puzzle Script. Puzzle Script is a videogame description language - created by Stephen Lavelle - for scripting puzzle games. We propose a system to help in generating levels for Puzzle Script without any restriction on the current game rules. Two different approaches are used with a trade off between speed (Constructive approach) and playability (Genetic approach). These two approaches use a level evaluator that calculates the scores of the generated levels based on their playability and challenge. The generated levels are assessed by human players statistically, and the results show that the con- structive approach is capable of generating playable levels up to 90{\%}, while genetic approach can reach up to 100{\%}. The results also show a high correlation between the system scores and the human scores.},
author = {Khalifa, Ahmed and Fayek, Magda},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/2370825a394496cd8bc2e4f2951539503a4d3906.pdf:pdf},
mendeley-groups = {Estimating difficulty / generation,PuzzleScript},
title = {{Automatic Puzzle Level Generation: A General Approach using a Description Language}},
url = {https://pdfs.semanticscholar.org/2370/825a394496cd8bc2e4f2951539503a4d3906.pdf},
year = {2015}
}

@article{Lim2014,
author = {Lim, Chong-u and Harrell, D Fox},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/cdbfecafd029da7fa972ef5abe8b0570ec22e813.pdf:pdf},
isbn = {9781479935475},
mendeley-groups = {PuzzleScript},
title = {{An Approach to General Videogame Evaluation and Automatic Generation using a Description Language}},
url = {http://storage.kghost.de/cig{\_}proc/full/paper{\_}70.pdf},
year = {2014}
}


@article{Lee2014,
author = {Lee, Michael J and Bahmani, Faezeh and Kwan, Irwin and Laferte, Jilian and Charters, Polina and Horvath, Amber and Luor, Fanny and Cao, Jill and Law, Catherine and Beswetherick, Michael and Long, Sheridan and Burnett, Margaret and Ko, Andrew J},
file = {:Users/kdkdk/Downloads/Principles of a debugging-first puzzle game for computing education.pdf:pdf},
isbn = {9781479940356},
keywords = {camp,circled,computational thinking,computer science education,debugging,educational game,figure 1,gidget,in this,learners design their own,levels for others to,mode,players write code,s level design mode,solve,summer,the gidget character is,user study},
mendeley-groups = {Other Puzzle needs},
title = {{Principles of a Debugging-First Puzzle Game for Computing Education}},
year = {2014}
}

@article{Schmidhuber,
author = {Jürgen Schmidhuber},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/33224ad0cdf6e2dc4893194dd587309c7887f0ba.pdf:pdf},
mendeley-groups = {Estimating difficulty / generation},
title = {{Formal Theory of Creativity, Fun, and Intrinsic Motivation}},
url = {http://people.idsia.ch/{~}juergen/ieeecreative.pdf},
year = {1990--2010}
}


@inproceedings{Shaker2013Ropossum,
author = {Shaker, Noor and Shaker, Mohammad and Togelius, Julian},
booktitle = {AIIDE},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/8160b34680030cfaa20acbef5dc2d4bfb2832f32.pdf:pdf},
title = {{Ropossum: An Authoring Tool for Designing, Optimizing and Solving Cut the Rope Levels}},
year = {2013}
}

@article{Shaker2013,
abstract = {In order to automatically generate high-quality game levels, one needs to be able to automatically verify that the levels are playable. The simulation-based approach to playability testing uses an artificial agent to play through the level, but building such an agent is not always an easy task and such an agent is not always readily available. We discuss this prob-lem in the context of the physics-based puzzle game Cut the Rope, which features continuous time and state space, mak-ing several approaches such as exhaustive search and reactive agents inefficient. We show that a deliberative Prolog-based agent can be used to suggest all sensible moves at each state, which allows us to restrict the search space so that depth-first search for solutions become viable. This agent is successfully used to test playability in Ropossum, a level generator based on grammatical evolution. The method proposed in this paper is likely to be useful for a large variety of games with similar characteristics.},
author = {Shaker, Mohammad and Shaker, Noor and Togelius, Julian},
file = {:Users/kdkdk/Documents/papers/Shaker2013Evolving.pdf:pdf},
journal = {Artificial Intelligence and Interactive Digital Entertainment},
pages = {72--78},
title = {{Evolving playable content for cut the rope through a simulation-based approach}},
year = {2013}
}

@article{Junghanns1999,
author = {Junghanns, Andreas and Schaeffer, Jonathan},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/44e46b89a6369533ec34c48640ba40d132ca2cba.pdf:pdf},
mendeley-groups = {Sokoban solver},
number = {November 1999},
title = {{Pushing the limits: new developments in single-agent search}},
url = {http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=8BA204ED92639C0447CE1A5DE3D62E59?doi=10.1.1.46.947{\&}rep=rep1{\&}type=pdf},
year = {1999}
}

@article{Weber2017,
archivePrefix = {arXiv},
arxivId = {arXiv:1707.06203v2},
author = {Weber, Th{\'{e}}ophane and Racani{\`{e}}re, S{\'{e}}bastien and Reichert, David P and Buesing, Lars},
eprint = {arXiv:1707.06203v2},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/3de914c2cec79fb61243f6aaf97594692c0120ae.pdf:pdf},
mendeley-groups = {Sokoban solver},
number = {Nips},
title = {{Imagination-Augmented Agents for Deep Reinforcement Learning}},
url = {https://arxiv.org/pdf/1707.06203.pdf},
year = {2017}
}

@article{Froleyks2016,
abstract = {The game of Sokoban is an interesting platform for algorithm research. It is hard for humans and computers alike. Even small levels can take a lot of computation for all known al-gorithms. In this paper we will describe how a search based Sokoban solver can be structured and which algorithms can be used to realize each critical part. We implement a variety of those, construct a number of different solvers and combine them into an algorithm portfolio. The solver we construct this way can outperform existing solvers when run in parallel, i.e. our solver with 16 processors outperforms the previous se-quential solvers.},
author = {Froleyks, Nils},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/69b581b95afcbbd7448df445f996edce5c2a3c92.pdf:pdf;:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/Froleyks - 2016 - Using an Algorithm Portfolio to Solve Sokoban.pdf:pdf},
isbn = {1556-3650; 1556-9519},
mendeley-groups = {Sokoban solver},
title = {{Using an Algorithm Portfolio to Solve Sokoban}},
url = {https://baldur.iti.kit.edu/groupeffort/files/sokobanPortfolio.pdf},
year = {2016}
}

@article{MacHado2018,
abstract = {{\textcopyright} 2018 IEEE. We present Cicero, a mixed-initiative application for prototyping two-dimensional sprite-based games across different genres such as shooters, puzzles, and action games. Cicero provides a host of features which can offer assistance in different stages of the game development process. Noteworthy features include AI agents for gameplay simulation, a game mechanics recommender system, a playtrace aggregator, heatmap-based game analysis, a sequential replay mechanism, and a query system that allows searching for particular interaction patterns. In order to evaluate the efficacy and usefulness of the different features of Cicero, we conducted a user study in which we compared how users perform in game debugging tasks with different kinds of assistance.},
author = {MacHado, Tiago and Gopstein, Daniel and Nealen, Andy and Nov, Oded and Togelius, Julian},
doi = {10.1109/CEC.2018.8477829},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/5af5d51560c49bc067f82ffc5494881497cb03eb.pdf:pdf},
isbn = {9781509060177},
journal = {2018 IEEE Congress on Evolutionary Computation, CEC 2018 - Proceedings},
keywords = {AI for Games,AI-Assisted Game Design Tools,Game Debugging,Game Design,Game Prototyping},
mendeley-groups = {Mixed initiative aspect},
title = {{AI-Assisted Game Debugging with Cicero}},
url = {http://game.engineering.nyu.edu/wp-content/uploads/2018/05/ai-assisted-game-debugging.pdf},
year = {2018}
}


@article{Guzdial,
archivePrefix = {arXiv},
arxivId = {arXiv:1901.06417v1},
author = {Guzdial, Matthew and Chen, Shao-yu and Reno, Joshua and Liao, Nicholas},
eprint = {arXiv:1901.06417v1},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/157592a892ee44dd5b3b6a06f9191ac5ec8407ac.pdf:pdf},
isbn = {9781450359702},
keywords = {artificial intelligence,human computer collaboration,human-},
mendeley-groups = {Mixed initiative aspect},
year = {2019},
title = {{Friend , Collaborator , Student , Manager : How Design of an AI-Driven Game Level Editor Affects Creators}},
url = {http://export.arxiv.org/pdf/1901.06417}
}


@article{Science1996,
author = {Murase, Yoshio and Matsubara, Hitsohi and Hiraga Yuzuru},
file = {:Users/kdkdk/Downloads/Murase1996{\_}Chapter{\_}AutomaticMakingOfSokobanProble.pdf:pdf},
mendeley-groups = {Estimating difficulty / generation},
title = {{Automatic Making of Sokoban Problems Sokoban}},
year = {1996}
}

@article{Taylor2011,
abstract = {We describe an algorithm for the procedural generation of levels for the popular Japanese puzzle game Sokoban. The algorithm takes a few parameters and builds a random in-stance of the puzzle that is guaranteed to be solvable. Al-though our algorithm and its implementation runs in ex-ponential time, we present experimental evidence that it is sufficiently fast for offline use on a current generation PC when used to generate levels of size and complexity similar to those human-designed levels currently available online.},
author = {Taylor, Joshua and Parberry, Ian},
file = {:Users/kdkdk/Downloads/LARC-2011-01-2.pdf:pdf},
journal = {Proceedings of the 6th Annual North American Conference on AI and Simulation in Games},
keywords = {procedural generation,puzzle,sokoban},
mendeley-groups = {Estimating difficulty / generation},
pages = {5--12},
title = {{Procedural Generation of Sokoban Levels}},
year = {2011}
}

@article{Kartal2015,
abstract = {In this work, we propose a Monte Carlo Tree Search (MCTS) based approach to procedurally generate Sokoban puzzles. Our method generates puzzles through simulated game play, guaranteeing solvability in all generated puzzles. We perform a user study to infer features that are efficient to compute and are highly correlated with expected puzzle difficulty. We combine several of these features into a data-driven evalua-tion function for MCTS puzzle creation. The resulting algo-rithm is efficient and can be run in an anytime manner, ca-pable of quickly generating a variety of challenging puzzles. We perform a second user study to validate the predictive ca-pability of our approach, showing a high correlation between increasing puzzle scores and perceived difficulty.},
author = {Kartal, Bilal and Sohre, Nick and Guy, Stephen J},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/bd71e71fe3fb31702401f4a7da2cd57c9762edf9.pdf:pdf},
keywords = {Research Papers},
mendeley-groups = {Estimating difficulty / generation},
title = {{Data-Driven Sokoban Puzzle Generation with Monte Carlo Tree Search}},
url = {http://motion.cs.umn.edu/pub/SokobanMCTS/DataDrivenSokobanMCTS.pdf},
year = {2015}
}


@article{Liapis2016,
abstract = {Algorithms can generate game content, but so can humans. And while PCG algorithms can generate some kinds of game content remarkably well and ex- tremely quickly, some other types (and aspects) of game content are still best made by humans. Can we combine the advantages of procedural generation and human creation somehow? This chapter discusses mixed-initiative systems for PCG, where both humans and software have agency and co-create content. A small taxonomy is presented of different ways in which humans and algorithms can collaborate, and then three mixed-initiative PCG systems are discussed in some detail: Tanagra, Sen- tient Sketchbook, and Ropossum.},
author = {Liapis, Antonios and Smith, Gillian and Shaker, Noor},
doi = {10.1007/978-3-319-42716-4_11},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/1324c6e6fcb69be2e4840ef01c85ee625ec4f1c3.pdf:pdf},
isbn = {978-3-319-42716-4},
issn = {0284-4311},
mendeley-groups = {Other Puzzle needs},
number = {Firaxis 2014},
journal = {Procedural Content Generation in Games},
pages = {195--214},
title = {{Mixed-initiative content creation}},
url = {http://link.springer.com/10.1007/978-3-319-42716-4{\_}11},
year = {2016}
}

@article{Demaine2003,
abstract = {We prove NP-hardness of a wide class of pushing-block puzzles similar to the classic Sokoban, generalizing several previous results [E.D. Demaine et al., in: Proc. 12th Canad. Conf. Comput. Geom., 2000, pp. 211-219; E.D. Demaine et al., Technical Report, January 2000; A. Dhagat, J. O'Rourke, in: Proc. 4th Canad. Conf. Comput. Geom., 1992, pp. 188-191; D. Dor, U. Zwick, Computational Geometry 13 (4) (1999) 215-228; J. O'Rourke, Technical Report, November 1999; G. Wilfong, Ann. Math. Artif. Intell. 3 (1991) 131-150]. The puzzles consist of unit square blocks on an integer lattice; all blocks are movable. The robot may move horizontally and vertically in order to reach a specified goal position. The puzzle variants differ in the number of blocks that the robot can push at once, ranging from at most one (Push-1) up to arbitrarily many (Push-*). Other variations were introduced to make puzzles more tractable, in which blocks must slide their maximal extent when pushed (PushPush), and in which the robot's path must not revisit itself (Push-X). We prove that all of these puzzles are NP-hard. {\textcopyright} 2003 Elsevier Science B.V.},
author = {Demaine, Erik D. and Demaine, Martin L. and Hoffmann, Michael and O'Rourke, Joseph},
doi = {10.1016/S0925-7721(02)00170-0},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/407140f78a9ad7d57117efbfffe446ed48b76054.pdf:pdf},
isbn = {0925-7721},
issn = {09257721},
journal = {Computational Geometry: Theory and Applications},
keywords = {Combinatorial games,Computational complexity,Motion planning},
pages = {21--36},
title = {{Pushing blocks is hard}},
url = {https://ac.els-cdn.com/S0925772102001700/1-s2.0-S0925772102001700-main.pdf?{\_}tid=34a8991a-aa96-466f-b57b-ea4325bbfb91{\&}acdnat=1543167935{\_}a7d4be4f531084afe7a1af270b303db6},
volume = {26},
year = {2003}
}

@article{Hearn2005,
abstract = {We present a nondeterministic model of computation based on reversing edge directions in weighted directed graphs with minimum in-flow constraints on vertices. Deciding whether this simple graph model can be manipulated in order to reverse the direction of a particular edge is shown to be PSPACE-complete by a reduction from Quantified Boolean Formulas. We prove this result in a variety of special cases including planar graphs and highly restricted vertex configurations, some of which correspond to a kind of passive constraint logic. Our framework is inspired by (and indeed a generalization of) the "Generalized Rush Hour Logic" developed by Flake and Baum [Theoret. Comput. Sci. 270(1-2) (2002) 895]. We illustrate the importance of our model of computation by giving simple reductions to show that several motion-planning problems are PSPACE-hard. Our main result along these lines is that classic unrestricted sliding-block puzzles are PSPACE-hard, even if the pieces are restricted to be all dominoes (1×2 blocks) and the goal is simply to move a particular piece. No prior complexity results were known about these puzzles. This result can be seen as a strengthening of the existing result that the restricted Rush HourTM puzzles are PSPACE-complete [Theoret. Comput. Sci. 270(1-2) (2002) 895], of which we also give a simpler proof. We also greatly strengthen the conditions for the PSPACE-hardness of the Warehouseman's Problem [Int. J. Robot. Res. 3(4) (1984) 76], a classic motion-planning problem. Finally, we strengthen the existing result that the pushing-blocks puzzle Sokoban is PSPACE-complete [In: Proc. Internat. Conf. on Fun with Algorithms, Elba, Italy, June 1998, pp. 65-76.], by showing that it is PSPACE-complete even if no barriers are allowed. {\textcopyright} 2005 Elsevier B.V. All rights reserved.},
author = {Hearn, Robert A. and Demaine, Erik D.},
doi = {10.1016/j.tcs.2005.05.008},
file = {:Users/kdkdk/Downloads/paper.pdf:pdf},
issn = {03043975},
journal = {Theoretical Computer Science},
keywords = {Combinatorial puzzles,Computational complexity,Hardness,Sliding blocks},
mendeley-groups = {Sokoban solver},
pages = {72--96},
title = {{PSPACE-completeness of sliding-block puzzles and other problems through the nondeterministic constraint logic model of computation}},
volume = {343},
year = {2005}
}

@article{Hard2015,
archivePrefix = {arXiv},
arxivId = {arXiv:1203.1895v3},
author = {Hard, Computationally and Demaine, Erik D and Guo, Alan and Viglietta, Giovanni},
eprint = {arXiv:1203.1895v3},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/b5c8162180563026df9d11fc7212f7332491b814.pdf:pdf},
pages = {1--36},
title = {{Classic Nintendo Games are (Computationally) Hard}},
url = {https://arxiv.org/pdf/1203.1895.pdf},
year = {2015}
}


@article{Viglietta2014,
abstract = {We establish some general schemes relating the computational complexity of a video game to the presence of certain common elements or mechanics, such as destroyable paths, collectible items, doors opened by keys or activated by buttons or pressure plates, etc. Then we apply such "metatheorems" to several video games published between 1980 and 1998, including Pac-Man, Tron, Lode Runner, Boulder Dash, Deflektor, Mindbender, Pipe Mania, Skweek, Prince of Persia, Lemmings, Doom, Puzzle Bobble{\~{}}3, and Starcraft. We obtain both new results, and improvements or alternative proofs of previously known results.},
archivePrefix = {arXiv},
arxivId = {1201.4995},
author = {Viglietta, Giovanni},
doi = {10.1007/s00224-013-9497-5},
eprint = {1201.4995},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/c2bbce6fba2a035e754dde97908ecb74439761b4.pdf:pdf},
isbn = {9783642303463},
issn = {14330490},
journal = {Theory of Computing Systems},
keywords = {Complexity,Games,Pac-Man,Starcraft,Tron},
pages = {595--621},
title = {{Gaming is a hard job, but someone has to do it!}},
url = {https://arxiv.org/pdf/1201.4995.pdf},
volume = {54},
year = {2014}
}

@article{Williams2017,
author = {Williams, Aaron},
file = {:Users/kdkdk/Downloads/jcdcggg-mazezam-4.pdf:pdf},
mendeley-groups = {Sokoban solver},
number = {August},
title = {{MazezaM Levels with Exponentially Long Solutions ( Extended Abstract )}},
year = {2017}
}


@article{Culberson1997,
author = {Culberson, Joseph C and Culberson, Joseph C},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/7a73f74c2943e5aafef364735302a36ee2f17b26.pdf:pdf},
mendeley-groups = {Sokoban solver},
number = {April},
title = {{Sokoban is PSPACE-complete}},
url = {https://pdfs.semanticscholar.org/7a73/f74c2943e5aafef364735302a36ee2f17b26.pdf},
year = {1997}
}



@misc{listofsokobobangames,
mendeley-groups = {Design Sokoban},
title = {list-of-sokoban-games @ www.onlinespiele-sammlung.de},
url = {http://www.onlinespiele-sammlung.de/sokoban/list-of-sokoban-games.php}
}

@misc{PuzzleScript,
mendeley-groups = {Design Sokoban},
title = {PuzzleScript @ www.puzzlescript.net},
url = {https://www.puzzlescript.net}
}


@article{Pelanek2011,
author = {Jaru{\v{s}}ek Petr, Pel{\'{a}}nek Radek},
file = {:Users/kdkdk/Downloads/sokoban.pdf:pdf},
mendeley-groups = {Sokoban solver,Estimating difficulty / generation},
number = {January},
title = {{Human Problem Solving: Sudoku Case Study}},
year = {2011}
}

@article{Jaru,
author = {Jaru{\v{s}}ek Petr, Pel{\'{a}}nek Radek},
file = {:Users/kdkdk/Documents/papers/2518-11200-1-PB.pdf:pdf},
isbn = {9781577355014},
journal = {Artificial Intelligence},
pages = {428--433},
year = {2011},
title = {{What Determines Difficulty of Transport Puzzles? Experiments with Human Problem Solving}}
}


@article{Caine2007,
author = {Caine, Allan and Cohen, Robin},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/7e7752098fb05c02e5ca27f2d68684117be83302.pdf:pdf},
mendeley-groups = {Mixed initiative aspect},
pages = {20--32},
title = {{Tutoring an Entire Game with Dynamic Strategy Graphs : The Mixed-Initiative Sudoku Tutor}},
url = {https://pdfs.semanticscholar.org/7e77/52098fb05c02e5ca27f2d68684117be83302.pdf},
volume = {2},
year = {2007}
}

@article{Liapis2013,
abstract = {This paper introduces the Sentient Sketchbook, a tool which supports a designer in the creation of game levels. Using map sketches to alleviate designer effort, the tool automates playability checks and evaluations and visualizes significant gameplay properties. This paper also introduces constrained novelty search via a two-population paradigm for generating, in real-time, alternatives to the author's design and evaluates its potential against current approaches. The paper concludes with a small-scale user study in which industry experts interact with the Sentient Sketchbook to design game levels. Results demonstrate the tool's potential and provide directions for its improvement.},
author = {Liapis, Antonios and Yannakakis, Georgios N. and Togelius, Julian},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/dd4c759cb5e537761af5768750ddb2bb3a913884.pdf:pdf},
isbn = {978-0-9913982-0-1},
journal = {Proceedings of the 8th International Conference on the Foundations of Digital Games (FDG 2013)},
keywords = {computer-aided design,elty search,genetic algorithms,level design,nov-,procedural content generation},
mendeley-groups = {Mixed initiative aspect},
pages = {213--220},
title = {{Sentient sketchbook: Computer-aided game level authoring}},
url = {http://www.itu.dk/people/anli/mixedinitiative/sentient{\_}sketchbook.pdf{\%}5Cnhttp://www.fdg2013.org/program/papers/paper28{\_}liapis{\_}etal.pdf},
year = {2013}
}

@article{Smith2011,
abstract = {Tanagra is a mixed-initiative tool for level design, allowing a human and a computer to work together to produce a level for a 2-D platformer. An underlying, reactive level generator ensures that all levels created in the environment are playable, and provides the ability for a human designer to rapidly view many different levels that meet their specifications. The human designer can iteratively refine the level by placing and moving level geometry, as well as through directly manipulating the pacing of the level. This paper presents the design environment, its underlying architecture that integrates reactive planning and numerical constraint solving, and an evaluation of Tanagra's expressive range.},
author = {Smith, Gillian and Whitehead, Jim and Mateas, Michael},
doi = {10.1109/TCIAIG.2011.2159716},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/4b933fd0bd6a091821bdd7909edd7cc3658bbe72.pdf:pdf},
issn = {1943068X},
journal = {IEEE Transactions on Computational Intelligence and AI in Games},
keywords = {Augmented design,constraint programming,games,level design,mixed initiative,procedural content generation,reactive planning},
mendeley-groups = {Mixed initiative aspect},
number = {3},
pages = {201--215},
title = {{Tanagra: Reactive planning and constraint solving for mixed-initiative level design}},
url = {http://sokath.com/main/files/1/smith-tanagra-tciaig.pdf},
volume = {3},
year = {2011}
}

@article{Baldwin2017,
author = {Baldwin, Alexander and Dahlskog, Steve and Font, Jose M and Holmberg, Johan},
file = {:Users/kdkdk/Downloads/dungeoncreation.pdf:pdf},
isbn = {9781538632338},
mendeley-groups = {Mixed initiative aspect},
title = {{Mixed-Initiative Procedural Generation of Dungeons using Game Design Patterns}},
year = {2017}
}


@article{Butler2013,
author = {Butler, Eric and Smith, Adam M and Liu, Yun-en and Popovi, Zoran},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/05c720785233f1368915908a75e7b54f7a5a7dfe.pdf:pdf},
isbn = {9781450322713},
mendeley-groups = {Mixed initiative aspect},
title = {{A Mixed-Initiative Tool for Designing Level Progressions in Games}},
url = {https://www.ericbutler.net/assets/papers/uist2013{\_}progression.pdf},
year = {2013}
}

@article{Osborn2011,
author = {Osborn, Joseph C and Grow, April and Mateas, Michael},
file = {:Users/kdkdk/Downloads/7389-32676-1-PB.pdf:pdf},
keywords = {Research Papers: Poster Presentations},
mendeley-groups = {Mixed initiative aspect},
journal = {Proceedings of the Ninth AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment},
pages = {163--169},
title = {{Modular Computational Critics for Games}},
year = {2011}
}

@article{Smith2008,
author = {Smith, Adam M and Nelson, Mark J and Mateas, Michael},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/4fcf0d3b11346a939bb99999bbd0201870e02bc9.pdf:pdf},
mendeley-groups = {Mixed initiative aspect},
number = {2007},
pages = {193--194},
title = {{Prototyping Games with BIPED}},
url = {https://pdfs.semanticscholar.org/4fcf/0d3b11346a939bb99999bbd0201870e02bc9.pdf},
year = {2008}
}


@article{Nelson2009,
author = {Nelson, Mark J},
file = {:Users/kdkdk/Library/Application Support/Mendeley Desktop/Downloaded/f136acc8a0058138fb9265765fe737cf35345620.pdf:pdf},
isbn = {9781605584379},
keywords = {authoring tools,game mechanics,videogames},
mendeley-groups = {Mixed initiative aspect},
title = {{A Requirements Analysis for Videogame Design Support Tools}},
url = {http://www.kmjn.org/publications/DesignSupport{\_}FDG09.pdf},
year = {2009}
}

@article{Lawson1997,
author = {Lawson, Bryan and Ming Loke, Shee},
year = {1997},
month = {04},
pages = {171-183},
title = {Computers, words and pictures},
volume = {18},
journal = {Design Studies},
doi = {10.1016/S0142-694X(97)85459-2}
}


@article{Giaccardi2008,
author = {Giaccardi, Elisa and Fischer, Gerhard},
doi = {10.1080/14626260701847456},
file = {:Users/kdkdk/Downloads/Creativity{\_}and{\_}evolution{\_}A{\_}metadesign{\_}perspective.pdf:pdf},
mendeley-groups = {Mixed initiative aspect},
number = {March},
title = {{Creativity and evolution : A metadesign perspective}},
year = {2008}
}


